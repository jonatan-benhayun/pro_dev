name: CI (Compose + E2E)

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: appsecret
      # חשוב: נוסיף גם DATABASE_URL כדי שה-Backend יתחבר ל-Postgres (לא יעבור ל-sqlite)
      DATABASE_URL: postgresql+psycopg2://appuser:appsecret@db:5432/appdb

      # פרמטרים לטסט
      NGINX_HOST_PORT: 80
      BACKEND_CHECK_PATH: "/api/ping"
      EXPECT_PATTERN1: '"status"\\s*:\\s*"ok"'
      EXPECT_PATTERN2: '"db"\\s*:\\s*"connected"'

    steps:
      - uses: actions/checkout@v4

      # אופציונלי אבל עוזר: התקנת Buildx (יציב יותר ל-build)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compose Up
        run: docker compose up -d --build

      - name: Show status
        run: |
          docker ps -a
          echo "---- HEALTH ----"
          docker inspect pro_dev-db-1 | jq '.[0].State.Health' || true
          echo "---------------"

      - name: E2E smoke
        run: |
          # נעלה את טיימאאוט ההמתנה (אם צריך)
          sed -i 's/MAX=90/MAX=150/' tests/smoke_test.sh
          bash tests/smoke_test.sh

      - name: Logs on failure
        if: failure()
        run: docker compose logs --tail=200 || true

      - name: Compose Down
        if: always()
        run: docker compose down -v

