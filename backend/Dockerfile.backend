FROM python:3.11-slim
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential libpq-dev curl && rm -rf /var/lib/apt/lists/*
WORKDIR /app
COPY requirements.txt /app/requirements.txt
RUN pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir gunicorn psycopg2-binary
COPY . /app
COPY <<'BASH' /usr/local/bin/entrypoint.sh
#!/usr/bin/env bash
set -euo pipefail
RETRIES="${DB_INIT_RETRIES:-40}"; DELAY="${DB_INIT_DELAY:-1.5}"
echo "[backend] Waiting for DB..."
for i in $(seq 1 "$RETRIES"); do
python - <<'PY' && ok=1 || ok=0
import os, psycopg2
from urllib.parse import urlparse
url=os.getenv("DATABASE_URL")
if not url: raise SystemExit(2)
p=urlparse(url.replace("postgresql+psycopg2","postgresql"))
conn=psycopg2.connect(dbname=p.path.lstrip('/'), user=p.username, password=p.password,
                      host=p.hostname, port=p.port or 5432, connect_timeout=2)
conn.close()
PY
[ "$ok" = "1" ] && { echo "[backend] DB ready."; break; }
sleep "$DELAY"
done
if command -v flask >/dev/null 2>&1; then
  echo "[backend] flask db upgrade (if configured)..."
  flask db upgrade || true
fi
echo "[backend] starting gunicorn..."
exec gunicorn "wsgi:app" --bind 0.0.0.0:8000 --workers 3 --timeout 60
BASH
RUN chmod +x /usr/local/bin/entrypoint.sh
EXPOSE 8000
CMD ["/usr/local/bin/entrypoint.sh"]
